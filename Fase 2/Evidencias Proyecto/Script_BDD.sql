-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS drizzle.__drizzle_migrations
(
    id serial NOT NULL,
    hash text COLLATE pg_catalog."default" NOT NULL,
    created_at bigint,
    CONSTRAINT __drizzle_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comuna
(
    id_comuna serial NOT NULL,
    id_region integer NOT NULL,
    comuna character varying(80) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT comuna_pkey PRIMARY KEY (id_comuna)
);

CREATE TABLE IF NOT EXISTS public.housing
(
    id_housing serial NOT NULL,
    id_user integer NOT NULL,
    address character varying(200) COLLATE pg_catalog."default" NOT NULL,
    city character varying(100) COLLATE pg_catalog."default" NOT NULL,
    rent integer NOT NULL,
    size integer NOT NULL,
    available_room integer NOT NULL,
    pets_allowed boolean NOT NULL,
    smoking_allowed boolean NOT NULL,
    created_at timestamp without time zone NOT NULL,
    CONSTRAINT housing_pkey PRIMARY KEY (id_housing)
);

CREATE TABLE IF NOT EXISTS public.housing_photos
(
    id_housing_photos serial NOT NULL,
    id_housing integer NOT NULL,
    photo_url character varying(200) COLLATE pg_catalog."default" NOT NULL,
    is_main boolean NOT NULL,
    CONSTRAINT housing_photos_pkey PRIMARY KEY (id_housing_photos)
);

CREATE TABLE IF NOT EXISTS public.match
(
    id serial NOT NULL,
    from_id_user integer NOT NULL,
    to_id_user integer NOT NULL,
    match_status match_status NOT NULL DEFAULT 'pending'::match_status,
    created_at timestamp without time zone DEFAULT now(),
    "matchedAt" timestamp without time zone,
    CONSTRAINT match_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.preference
(
    id_preferences serial NOT NULL,
    owner_id integer NOT NULL,
    preferred_gender character varying(10) COLLATE pg_catalog."default" NOT NULL,
    min_age integer,
    max_age integer,
    min_rent integer NOT NULL,
    max_rent integer NOT NULL,
    min_km_radius integer NOT NULL DEFAULT 1,
    max_km_radius integer NOT NULL DEFAULT 180,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT preference_pkey PRIMARY KEY (id_preferences)
);

CREATE TABLE IF NOT EXISTS public.profile
(
    id_profile serial NOT NULL,
    id_user integer NOT NULL,
    description character varying(100) COLLATE pg_catalog."default",
    smoker character varying(25) COLLATE pg_catalog."default",
    drinker character varying(25) COLLATE pg_catalog."default",
    pets integer,
    lifestyle_schedule character varying(25) COLLATE pg_catalog."default",
    occupation character varying(30) COLLATE pg_catalog."default",
    sociability character varying(25) COLLATE pg_catalog."default",
    id_comuna integer NOT NULL,
    CONSTRAINT profile_pkey PRIMARY KEY (id_profile),
    CONSTRAINT profile_id_user_unique UNIQUE (id_user)
);

CREATE TABLE IF NOT EXISTS public.region
(
    id_region serial NOT NULL,
    region character varying(80) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT region_pkey PRIMARY KEY (id_region)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id_user integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    age integer,
    gender character varying(10) COLLATE pg_catalog."default",
    phone_number character varying(11) COLLATE pg_catalog."default",
    user_type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT user_pkey PRIMARY KEY (id_user),
    CONSTRAINT user_email_unique UNIQUE (email),
    CONSTRAINT user_phone_number_unique UNIQUE (phone_number)
);

CREATE TABLE IF NOT EXISTS public.user_photos
(
    id_user_photos serial NOT NULL,
    id_user integer NOT NULL,
    photo_key character varying(200) COLLATE pg_catalog."default" NOT NULL,
    is_main boolean NOT NULL,
    CONSTRAINT user_photos_pkey PRIMARY KEY (id_user_photos)
);

CREATE TABLE IF NOT EXISTS public.user_type
(
    id_user_type serial NOT NULL,
    type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_type_pkey PRIMARY KEY (id_user_type),
    CONSTRAINT user_type_type_unique UNIQUE (type)
);

ALTER TABLE IF EXISTS public.comuna
    ADD CONSTRAINT comuna_id_region_region_id_region_fk FOREIGN KEY (id_region)
    REFERENCES public.region (id_region) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.housing
    ADD CONSTRAINT housing_id_user_user_id_user_fk FOREIGN KEY (id_user)
    REFERENCES public."user" (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.housing_photos
    ADD CONSTRAINT housing_photos_id_housing_housing_id_housing_fk FOREIGN KEY (id_housing)
    REFERENCES public.housing (id_housing) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.match
    ADD CONSTRAINT match_from_id_user_user_id_user_fk FOREIGN KEY (from_id_user)
    REFERENCES public."user" (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.match
    ADD CONSTRAINT match_to_id_user_user_id_user_fk FOREIGN KEY (to_id_user)
    REFERENCES public."user" (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.preference
    ADD CONSTRAINT preference_owner_id_user_id_user_fk FOREIGN KEY (owner_id)
    REFERENCES public."user" (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.profile
    ADD CONSTRAINT profile_id_comuna_comuna_id_comuna_fk FOREIGN KEY (id_comuna)
    REFERENCES public.comuna (id_comuna) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.profile
    ADD CONSTRAINT profile_id_user_user_id_user_fk FOREIGN KEY (id_user)
    REFERENCES public."user" (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS profile_id_user_unique
    ON public.profile(id_user);


ALTER TABLE IF EXISTS public."user"
    ADD CONSTRAINT user_user_type_user_type_type_fk FOREIGN KEY (user_type)
    REFERENCES public.user_type (type) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_photos
    ADD CONSTRAINT user_photos_id_user_user_id_user_fk FOREIGN KEY (id_user)
    REFERENCES public."user" (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;